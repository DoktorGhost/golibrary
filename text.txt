
+ Только один пользователь может брать одну и ту же книгу в руки. (используй уникальный индекс)
+ В базе присутствует информация об авторах книг.
+ Присутствует функционал возвращения книги пользователем.
+ Присутствует функционал создания топа читаемых авторов.

+ Реализуй метод получения книги пользователем, где указывается id книги и id пользователя, который хочет ее получить.
+ Если книга уже выдана, то возвращается ошибка.
+ Если пользователя не существует, то возвращается ошибка.
+ Если книги не существует, то возвращается ошибка.
+ Если всё правильно, то книга выдается пользователю.


Присутствует документация Swagger к HTTP-методам, далее именуемым функционалом.
+ В проекте есть таблица авторов. Если она пуста, должно добавиться 10 авторов при старте приложения.
+ Присутствует функционал вывода списка пользователей с полем RentedBooks, которое является массивом книг []Book. В книге присутствует информация об авторе Author{}).
+ Присутствует функционал добавления авторов.
+ Присутствует функционал вывода списка авторов. Для каждого автора есть поле Books, которое является массивом книг []Book.
+ Имеется таблица книг. Если она пуста, должно добавиться 100 книг при старте приложения. Книги должны ссылаться на существующего автора.
+ Присутствует функционал добавления книг с указанием id автора. Если автора не существует, должна показываться ошибку, сообщающая, что указанного автора нет в списке.
+ Присутствует функционал вывода списка всех книг. В каждой книге присутствует структура автора (author).
+ Имеется таблица пользователей. Пользователи добавляются при старте приложения, если таблица пуста. Количество пользователей — больше 50.
+ Используется библиотека Gofakeit, которую необходимо применить для генерации данных.
+ Присутствует функционал получения книги существующим пользователем библиотеки. При этой операции передается id книги и id пользователя. Далее книгу нельзя выдавать, пока пользователь не вернет ее.
+ Присутствует функционал сдачи книги.
Все методы можно сделать без авторизации. Если применяется авторизация, она должна быть реализована через JWT токены.


Тесты:

+user
    +service
        +user_service
    +usecases
        +dataUseCase
        +usersUseCase


library
    book
        +author_service
        +book_service
        +bookUseCase
        +libraryUseCase
    +rental
        +rental_service
